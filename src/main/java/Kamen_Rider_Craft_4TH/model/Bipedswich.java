// Date: 24/08/2013 15:36:02
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Kamen_Rider_Craft_4TH.model;

import org.lwjgl.opengl.GL11;

import Kamen_Rider_Craft_4TH.item.fourze.item_Fourzedriver;
import Kamen_Rider_Craft_4TH.util.Refercence;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.item.EntityArmorStand;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraft.item.EnumAction;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;


public class Bipedswich extends ModelBiped
{
	
	
	/** The Biped's Right Arm */
	public ModelRenderer bipedRightArm2;
	/** The Biped's Left Arm */
	public ModelRenderer bipedLeftArm2;
	/** The Biped's Right Leg */
	public ModelRenderer bipedRightLeg2;
	/** The Biped's Left Leg */
	public ModelRenderer bipedLeftLeg2;
	
	public ItemStack belt;
	public ItemStack wings;
	
	public Bipedswich()
	{
		this.bipedRightArm2 = new ModelRenderer(this, 40, 16);
		this.bipedRightArm2.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4, 1);
		this.bipedRightArm2.setRotationPoint(-5.0F, 2.0F , 0.0F);
		this.bipedLeftArm2= new ModelRenderer(this, 40, 16);
		this.bipedLeftArm2.mirror = true;
		this.bipedLeftArm2.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, 1);
		this.bipedLeftArm2.setRotationPoint(5.0F, 2.0F , 0.0F);
		this.bipedRightLeg2 = new ModelRenderer(this, 0, 16);
		this.bipedRightLeg2.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, 1);
		this.bipedRightLeg2.setRotationPoint(-1.9F, 12.0F , 0.0F);
		this.bipedLeftLeg2 = new ModelRenderer(this, 0, 16);
		this.bipedLeftLeg2.mirror = true;
		this.bipedLeftLeg2.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, 1);
		this.bipedLeftLeg2.setRotationPoint(1.9F, 12.0F , 0.0F);
	}



	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		
		this.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		
		GL11.glPushMatrix();
		GL11.glScalef(1.1F, 1.1F, 1.1F);



		if (entity.isSneaking()){
			GL11.glTranslatef(0, 0.2F, 0);

		}else {
			GL11.glTranslatef(0, -0.02F, 0);


		}
		this.bipedRightArm2.offsetX=-0.02f;
		if (entity instanceof  EntityLivingBase){
			ItemStack stack  =   ((EntityLivingBase) entity).getItemStackFromSlot(EntityEquipmentSlot.FEET);

				Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation(Refercence.MODID+":textures/armor/"+item_Fourzedriver.get_CircleModule(stack)+".png"));	
		}
		this.bipedRightArm2.render(f5);
		GL11.glPopMatrix();
		

		GL11.glPushMatrix();
		GL11.glScalef(1F, 1F, 1F);


		if (entity.isSneaking()){
			GL11.glTranslatef(0, 0.3F, 0);

		}else {
			GL11.glTranslatef(0, 0.02F, 0);


		}


		this.bipedRightLeg2.offsetX=-0.045f;
		if (entity instanceof  EntityLivingBase){
			ItemStack stack  =   ((EntityLivingBase) entity).getItemStackFromSlot(EntityEquipmentSlot.FEET);

				Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation(Refercence.MODID+":textures/armor/"+item_Fourzedriver.get_CrossModule(stack)+".png"));	
		}
		this.bipedRightLeg2.render(f5);



		GL11.glPopMatrix();
		GL11.glPushMatrix();
		GL11.glScalef(1.1F, 1.1F, 1.1F);



		if (entity.isSneaking()){
			GL11.glTranslatef(0, 0.2F, 0);

		}else {
			GL11.glTranslatef(0, -0.02F, 0);


		}

		if (entity instanceof  EntityLivingBase){
			ItemStack stack  =   ((EntityLivingBase) entity).getItemStackFromSlot(EntityEquipmentSlot.FEET);

			if (stack!=null){
				

				Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation(Refercence.MODID+":textures/armor/"+item_Fourzedriver.get_SquareModule(stack)+".png"));	
				
					
				
			}
		}
		this.bipedLeftArm2.offsetX=0.02f;
		this.bipedLeftArm2.render(f5);



		GL11.glPopMatrix();
		GL11.glPushMatrix();
		GL11.glScalef(1F, 1F, 1F);


		if (entity.isSneaking()){
			GL11.glTranslatef(0, 0.3F, 0);

		}else {
			GL11.glTranslatef(0, 0.02F, 0);


		}

		this.bipedLeftLeg2.offsetX=0.045f;

		if (entity instanceof  EntityLivingBase){
			ItemStack stack  =   ((EntityLivingBase) entity).getItemStackFromSlot(EntityEquipmentSlot.FEET);

			if (stack!=null){
						Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation(Refercence.MODID+":textures/armor/"+item_Fourzedriver.get_TriangleModule(stack)+".png"));	
				
			}
		}
		this.bipedLeftLeg2.render(f5);
		GL11.glPopMatrix();
		GL11.glPushMatrix();

		EntityLivingBase living = ((EntityLivingBase)entity);

		ItemStack stack = living.getItemStackFromSlot(EntityEquipmentSlot.FEET);
		Item Belt = belt.getItem();
		
		EntityItem entItem = new EntityItem(Minecraft.getMinecraft().player.getEntityWorld(), 0D, 0D, 0D,living.getItemStackFromSlot(EntityEquipmentSlot.FEET));
		//Without the below line, the item will spazz out
		entItem.hoverStart = 1.0F;

		if(living.isSneaking()){
			GL11.glRotatef(20, 1, 0, 0);	
		}
		double dri = 0; 
		GL11.glRotatef(180, 0, 1, 0);
		GL11.glRotatef(180, 0, 0, 1);
		GL11.glScaled(0.6, 0.6,0.6);
		GL11.glTranslatef((float) (0f+dri),-1.1f,0.3f);
		Minecraft.getMinecraft().getItemRenderer().renderItem(living,belt,null);
		GL11.glPopMatrix();
		GL11.glPushMatrix();

		if(entity.isSneaking()){
			GL11.glRotatef(20, 1, 0, 0);	
		}
		GL11.glRotatef(180, 0, 1, 0);
		GL11.glRotatef(180, 0, 0, 1);
		GL11.glScaled(3,3,1);
		GL11.glTranslatef((float) (0f),-0.05f,-0.2f);
		Minecraft.getMinecraft().getItemRenderer().renderItem(living,wings,null);
		GL11.glPopMatrix();	

	}

	public void setRotationAngles(float p_78087_1_, float p_78087_2_, float p_78087_3_, float p_78087_4_, float p_78087_5_, float p_78087_6_, Entity entityIn)
	{
		if (entityIn instanceof EntityArmorStand)
        {
            EntityArmorStand entityarmorstand = (EntityArmorStand)entityIn;
            this.bipedHead.rotateAngleX = 0.017453292F * entityarmorstand.getHeadRotation().getX();
            this.bipedHead.rotateAngleY = 0.017453292F * entityarmorstand.getHeadRotation().getY();
            this.bipedHead.rotateAngleZ = 0.017453292F * entityarmorstand.getHeadRotation().getZ();
            this.bipedHead.setRotationPoint(0.0F, 1.0F, 0.0F);
            this.bipedBody.rotateAngleX = 0.017453292F * entityarmorstand.getBodyRotation().getX();
            this.bipedBody.rotateAngleY = 0.017453292F * entityarmorstand.getBodyRotation().getY();
            this.bipedBody.rotateAngleZ = 0.017453292F * entityarmorstand.getBodyRotation().getZ();
            this.bipedLeftArm.rotateAngleX = 0.017453292F * entityarmorstand.getLeftArmRotation().getX();
            this.bipedLeftArm.rotateAngleY = 0.017453292F * entityarmorstand.getLeftArmRotation().getY();
            this.bipedLeftArm.rotateAngleZ = 0.017453292F * entityarmorstand.getLeftArmRotation().getZ();
            this.bipedRightArm.rotateAngleX = 0.017453292F * entityarmorstand.getRightArmRotation().getX();
            this.bipedRightArm.rotateAngleY = 0.017453292F * entityarmorstand.getRightArmRotation().getY();
            this.bipedRightArm.rotateAngleZ = 0.017453292F * entityarmorstand.getRightArmRotation().getZ();
            this.bipedLeftLeg.rotateAngleX = 0.017453292F * entityarmorstand.getLeftLegRotation().getX();
            this.bipedLeftLeg.rotateAngleY = 0.017453292F * entityarmorstand.getLeftLegRotation().getY();
            this.bipedLeftLeg.rotateAngleZ = 0.017453292F * entityarmorstand.getLeftLegRotation().getZ();
            this.bipedLeftLeg.setRotationPoint(1.9F, 11.0F, 0.0F);
            this.bipedRightLeg.rotateAngleX = 0.017453292F * entityarmorstand.getRightLegRotation().getX();
            this.bipedRightLeg.rotateAngleY = 0.017453292F * entityarmorstand.getRightLegRotation().getY();
            this.bipedRightLeg.rotateAngleZ = 0.017453292F * entityarmorstand.getRightLegRotation().getZ();
            this.bipedRightLeg.setRotationPoint(-1.9F, 11.0F, 0.0F);
            copyModelAngles(this.bipedHead, this.bipedHeadwear);
        }else{
        	super.setRotationAngles(p_78087_1_, p_78087_2_, p_78087_3_, p_78087_4_, p_78087_5_, p_78087_6_, entityIn);
        }
		copyModelAngles(this.bipedLeftArm, this.bipedLeftArm2);
		copyModelAngles(this.bipedLeftLeg, this.bipedLeftLeg2);
		copyModelAngles(this.bipedRightArm, this.bipedRightArm2);
		copyModelAngles(this.bipedRightLeg, this.bipedRightLeg2);

	}



}














